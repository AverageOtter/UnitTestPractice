        -:    0:Source:Password.cpp
        -:    0:Graph:Password.gcno
        -:    0:Data:Password.gcda
        -:    0:Runs:1
        -:    1:
        -:    2:#include "Password.h"
        -:    3:#include <string>
        -:    4:
        -:    5:using std::string;
        -:    6:
        -:    7:/*
        -:    8:  The function receives a string counts how many times the same character
        -:    9:  occurs at the beginning of the string, before any other characters (or the
        -:   10:  end of the string). The function is case-sensitive so 'Z' is different than
        -:   11:  'z' and any ASCII characters are allowed.
        -:   12:*/
        3:   13:int Password::count_leading_characters(string phrase)
        -:   14:{
        3:   15:  int repetition = 1;
        3:   16:  int index = 0;
        -:   17:
        7:   18:  while (index < phrase.length() - 1 && phrase[index] == phrase[index + 1])
        -:   19:  {
        4:   20:    repetition++;
        4:   21:    index++;
        -:   22:  }
        3:   23:  return repetition;
        -:   24:}
        -:   25:
        5:   26:bool Password::has_mixed_case(string str)
        -:   27:{
        5:   28:  if (str == "")
        -:   29:  {
        1:   30:    return false;
        -:   31:  }
        4:   32:  bool lc = false;
        4:   33:  bool uc = false;
       15:   34:  for (int i = 0; i < str.size(); i++)
        -:   35:  {
       11:   36:    if (str[i] >= 'A' && str[i] <= 'Z')
        -:   37:    {
        5:   38:      uc = true;
        -:   39:    }
       11:   40:    if (str[i] >= 'a' && str[i] <= 'z')
        -:   41:    {
        6:   42:      lc = true;
        -:   43:    }
        -:   44:  }
        4:   45:  return (lc && uc);
        -:   46:}
